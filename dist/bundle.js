/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Asteroid.js":
/*!*************************!*\
  !*** ./src/Asteroid.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Asteroid; });\n/* harmony import */ var _Vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector */ \"./src/Vector.js\");\n\n\nclass Asteroid {\n/* \tvar size;\n\tvar step = 25;\n\tvar start = 100;\n\tvar radius;\n\tvar rotation;\n\tvar x, y;\n\tvar points;\n\t//vector for direction\n\tvar vx;\n\tvar vy;\n\tvar gameheight;\n\tvar gamewidth; */\n\t\n\t/** @constructor\n    * Creates the game instance\n    * @param {integer} size - the size (or mass) of the asteroid.\n    * @param {integer} x - the initial x position\n\t* @param {integer} y - the initial y position\n    * @param {integer} gameheight - the height of the game screen in pixels\n\t* @param {integer} gamewidth - the width of the game screen in pixels\n    * @param {integer} dir - the normalized direction of the asteroid\n\t* @param {integer} speed - the magnitude of velocity of the asteroid\n    */\n\tconstructor(size, x, y, gameheight, gamewidth, dir, speed) {\n\t\tthis.size = size;\n\t\tthis.step = 10;\n\t\tthis.start = 10;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.radius = size * this.step + this.start;\n\t\tthis.gameheight = gameheight;\n\t\tthis.gamewidth = gamewidth;\n\t\tthis.dir = dir;\n\t\tthis.speed = speed;\n\t\tthis.points = [];\n\t\t\n\t\tfor (var i = 0; i < size + 7; i++) {\n\t\t\tvar b = {\n\t\t\t\tx: Math.random() * this.radius/5 + this.radius,\n\t\t\t\ty: 0\n\t\t\t}\n\t\t\tthis.points.push(_Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](b, Math.PI * 2 * (i/(size + 7))));\n\t\t}\n\t}\n\t\n\t\n\t/** @method render\n    * Draws the asteroid onto the screen\n    * @param ctx - the canvas context\n    */\n\trender(ctx) {\n\t\t\n\t\tctx.beginPath();\n\t\tctx.moveTo(this.x + this.points[0].x,this.y + this.points[0].y);\n\t\tfor (var i = 1; i < this.points.length; i++) {\n\t\t\tctx.lineTo(this.x + this.points[i].x,this.y + this.points[i].y);\n\t\t}\n\t\tctx.closePath();\n\t\tctx.strokeStyle = 'white';\n\t\tctx.stroke();\n\t\t/*\n\t\tctx.beginPath();\n\t\tctx.arc(this.x,this.y,this.radius,0,Math.PI * 2,false);\n\t\tctx.strokeStyle = 'white';\n\t\tctx.stroke();*/\n\t}\n\t\n\t/** @method update\n\t * Updates the positioning of the asteroid\n\t * @param elapsed - the elapsed time since last updated\n\t */\n\tupdate(elapsed) {\n\t\tthis.x += elapsed * this.speed * this.dir.x;\n\t\tthis.y += elapsed * this.speed * this.dir.y;\n\t\t\n\t\t//loop to other side of screen\n\t\tif (this.y > this.gameheight + this.radius) {\n\t\t\tthis.y = -this.radius;\n\t\t}\n\t\tif (this.y < -this.radius) {\n\t\t\tthis.y = this.gameheight + this.radius;\n\t\t}\n\t\tif (this.x > this.gamewidth + this.radius) {\n\t\t\tthis.x = -this.radius * 2;\n\t\t}\n\t\tif (this.x < -this.radius * 2) {\n\t\t\tthis.x = this.gamewidth + this.radius;\n\t\t}\n\t}\n\t/** @method collide\n\t * Handles inter-asteroid collisions\n\t * @param that - the colliding asteroid.\n\t */\n\tcollide(that) {\n\t\tvar s1vect = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"scalar_mult\"](this.dir, this.speed);\n\t\tvar s2vect = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"scalar_mult\"](that.dir, that.speed);\n\t\tvar d = Math.sqrt(Math.pow(this.x - that.x, 2) + Math.pow(this.y - that.y, 2)); \n\t\tvar nx = (that.x - this.x) / d; \n\t\tvar ny = (that.y - this.y) / d; \n\t\tvar p = 2 * (s1vect.x * nx + s1vect.y * ny - s2vect.x * nx - s2vect.y * ny) / \n\t\t        (this.size + that.size); \n\t\tvar a1 = {\n\t\t\tx: s1vect.x - p * this.size * nx,\n\t\t\ty: s1vect.y - p * this.size * ny\n\t\t};\n\t\tvar a2 = {\n\t\t\tx: s2vect.x + p * that.size * nx, \n\t\t\ty: s2vect.y + p * that.size * ny\n\t\t};\n\t\tthis.dir = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"normalize\"](a1);\n\t\tthis.speed = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"magnitude\"](a1);\n\t\tthat.dir = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"normalize\"](a2);\n\t\tthat.speed = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"magnitude\"](a2);\n\t\tvar perp = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"normalize\"]({x: this.x - that.x, y: this.y - that.y});\n\t\tvar diff = this.radius + that.radius - d;\n\t\tvar sepcount = 0;\n\t\twhile (_Vector__WEBPACK_IMPORTED_MODULE_0__[\"distance2\"](this,that) < Math.pow(this.radius + that.radius,2)) {\n\t\t\tthis.x += diff * perp.x;\n\t\t\tthis.y += diff * perp.y;\n\t\t\tsepcount ++;\n\t\t\tthat.x -= diff * perp.x;\n\t\t\tthat.y -= diff * perp.y\n\t\t\t/*this.x += this.dir.x * 0.5;\n\t\t\tthis.y += this.dir.y * 0.5;\n\t\t\tthat.x += that.dir.x * 0.5;\n\t\t\tthat.y += that.dir.y * 0.5;\n\t\t\tif (sepcount > 300) {\n\t\t\t\tconsole.log('High Separation Factor found');\n\t\t\t}*/\n\t\t}\n\n\t}\n\n\n\t/** @method destroy\n\t * Creates new asteroids if needed.\n\t */\n\tdestroy() {\n\t\tdocument.getElementById('explode').play();\n\t\tvar newsize = this.size / 2;\n\t\tif (newsize >= 1) {\n\t\t\tvar perp = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"normalize\"](_Vector__WEBPACK_IMPORTED_MODULE_0__[\"perpendicular\"](this.dir));\n\t\t\tvar x1 = (this.x + this.radius * 0.51 * _Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.dir,Math.PI/2).x)\n\t\t\tvar y1 = (this.y + this.radius * 0.51 * _Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.dir,Math.PI/2).y)\n\t\t\tvar x2 = (this.x + this.radius * 0.51 * _Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.dir,Math.PI/-2).x)\n\t\t\tvar y2 = (this.y + this.radius * 0.51 * _Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.dir,Math.PI/-2).y)\n\t\t\tif (x1 == NaN || x2 == NaN || y1 == NaN || y2 == NaN) {\n\t\t\t\talert('Bad number detected.');\n\t\t\t}\n\t\t\t//since m1*v1 = m1/2(v2 + v3) and v2 = v3, v1 = v2 = v3 when dividing size by two.\n\t\t\tvar a1 = new Asteroid(newsize,x1,y1,this.gameheight,this.gamewidth,_Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.dir,-0.2),this.speed);\n\t\t\tvar a2 = new Asteroid(newsize,x2,y2,this.gameheight,this.gamewidth,_Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.dir,0.2),this.speed);\n\t\t\treturn {\n\t\t\t\taster1: a1,\n\t\t\t\taster2: a2\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t\t\n\t}\n\t\n}\n\t\n\n//# sourceURL=webpack:///./src/Asteroid.js?");

/***/ }),

/***/ "./src/Bullet.js":
/*!***********************!*\
  !*** ./src/Bullet.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Bullet; });\nclass Bullet {\n\n    constructor(dir, x, y,gamewidth,gameheight) {\n        this.x = x;\n        this.y = y;\n        this.dir = dir;\n        this.speed = 0.3;\n        this.radius = 2;\n        this.gameheight = gameheight;\n        this.gamewidth = gamewidth;\n    }\n\n    render(ctx) {\n        ctx.beginPath();\n        ctx.fillStyle = 'white';\n        ctx.fillRect(this.x - this.radius, this.y -this.radius, this.radius * 2, this.radius * 2);\n    }\n\n    update(elapsed) {\n        this.x += this.dir.x * this.speed * elapsed;\n        this.y += this.dir.y * this.speed * elapsed;\n\n        if (this.x > this.gamewidth + this.radius || this.y > this.gameheight + this.radius || this.x < -this.radius || this.y < -this.radius) {\n\t\t\treturn true;\n\t\t}\n        return false;\n    }\n}\n\n//# sourceURL=webpack:///./src/Bullet.js?");

/***/ }),

/***/ "./src/Ship.js":
/*!*********************!*\
  !*** ./src/Ship.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Ship; });\n/* harmony import */ var _Vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector */ \"./src/Vector.js\");\n/* harmony import */ var _Bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bullet */ \"./src/Bullet.js\");\n\n\nclass Ship {\n\t/*var vx;\n\tvar vy;\n\tvar x, y;\n\tvar hitrad = 30;\n\tvar gameheight;\n\tvar gamewidth;\n\tvar acceleration = 0.02;*/\n\t\n\n\t/** @constructor\n\t * @param gamewidth - width of the game\n\t * @param gameheight - height of the game\n\t */\n\tconstructor(gamewidth, gameheight) {\n\t\tthis.gameheight = gameheight;\n\t\tthis.gamewidth = gamewidth;\n\t\tthis.x = gamewidth /2;\n\t\tthis.y = gameheight /2;\n\t\tthis.dir = {x: 0, y: -1};\n\t\tthis.acceleration = 0.0005;\n\t\tthis.radius = 12;\n\t\tthis.speed = 0;\n\t\tthis.points = [\n\t\t\t{x: 0, y:-12},\n\t\t\t{x: 10, y: 12},\n\t\t\t{x: 0, y: 6},\n\t\t\t{x: -10, y: 12}\n\t\t]\n\t\tthis.canFire = true;\n\t\tthis.firetimeout = 500;\n\t\tthis.lastfired = 0;\n\t\tthis.audio = document.getElementById('fire');\n\t}\n\t\n\t/** @method render\n\t * @param ctx - A canvas context\n\t * @param inputr - 1 if cw, -1 if ccw\n\t * @param elapsed - the amount of time elapsed\n\t */\n\trender(ctx) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(this.x + this.points[0].x,this.y + this.points[0].y);\n\t\tfor (var i = 1; i < this.points.length; i++) {\n\t\t\tctx.lineTo(this.x + this.points[i].x,this.y + this.points[i].y);\n\t\t}\n\t\t\n\t\tctx.strokeStyle = 'blue';\n\t\tctx.stroke();\n\t\tctx.fillStyle = 'white';\n\t\tctx.fill();\n\t}\n\t\n\n\t/** @method update\n\t * @param inputy - 1 if up, -1 if down\n\t * @param inputr - 1 if cw, -1 if ccw\n\t * @param elapsed - the amount of time elapsed\n\t */\n\tupdate(inputy, inputr, elapsed) {\n\t\tif (inputy == 0) {\n\t\t\tthis.acceleration = 0.0003;\n\t\t} else {\n\t\t\tthis.acceleration = 0.0005;\n\t\t}\n\t\tif (this.speed > inputy) {\n\t\t\tthis.speed -= elapsed * this.acceleration;\n\t\t}\n\t\tif (this.speed < inputy) {\n\t\t\tthis.speed += elapsed * this.acceleration;\n\t\t}\n\t\tif (inputr > 0) {\n\t\t\tthis.dir = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.dir, 0.005 * elapsed);\n\t\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\t\tthis.points[i] = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.points[i], 0.005 * elapsed);\n\t\t\t}\n\t\t}\n\t\tif (inputr < 0) {\n\t\t\tthis.dir = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.dir, -0.005 * elapsed);\n\t\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\t\tthis.points[i] = _Vector__WEBPACK_IMPORTED_MODULE_0__[\"rotate\"](this.points[i], -0.005 * elapsed);\n\t\t\t}\n\t\t}\n\t\tif (!(this.canFire)) {\n\t\t\tthis.lastfired += elapsed;\n\t\t\tif (this.lastfired > this.firetimeout) {\n\t\t\t\tthis.canFire = true;\n\t\t\t}\n\t\t}\n\t\tthis.x += this.dir.x * this.speed * elapsed;\n\t\tthis.y += this.dir.y * this.speed * elapsed;\n\n\t\tif (this.x > this.gamewidth + this.radius) {\n\t\t\tthis.x = -this.radius;\n\t\t}\n\t\tif (this.y > this.gameheight + this.radius) {\n\t\t\tthis.y = -this.radius;\n\t\t}\n\t\tif (this.x < -this.radius) {\n\t\t\tthis.x = this.gamewidth + this.radius;\n\t\t}\n\t\tif (this.y < -this.radius) {\n\t\t\tthis.y = this.gameheight + this.radius;\n\t\t}\n\t}\n\n\tfire() {\n\t\tif (this.canFire) {\n\t\t\tthis.lastfired = 0;\n\t\t\tthis.canFire = false;\n\t\t\tif (document.getElementById('fire').paused) {\n\t\t\t\tdocument.getElementById('fire').play();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdocument.getElementById('fire').currentTime = 0;\n\t\t\t}\n\t\t\tvar new_b = new _Bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](_Vector__WEBPACK_IMPORTED_MODULE_0__[\"normalize\"](this.dir), this.x, this.y,this.gamewidth,this.gameheight);\n\t\t\treturn new_b;\n\t\t}\n\t\treturn false;\n\t}\n\n\tcollidecheck(that) {\n\t\tif (_Vector__WEBPACK_IMPORTED_MODULE_0__[\"distance2\"]({x: this.x + this.points[0].x,y: this.y + this.points[0].y},that) < Math.pow(that.radius,2)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (_Vector__WEBPACK_IMPORTED_MODULE_0__[\"distance2\"]({x: this.x + this.points[1].x,y: this.y + this.points[1].y},that) < Math.pow(that.radius,2)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (_Vector__WEBPACK_IMPORTED_MODULE_0__[\"distance2\"]({x: this.x + this.points[3].x,y: this.y + this.points[3].y},that) < Math.pow(that.radius,2)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (_Vector__WEBPACK_IMPORTED_MODULE_0__[\"distance2\"]({x: this.x + (this.points[0].x +this.points[1].x)*0.5,y: this.y + (this.points[0].y * this.points[1].y)*0.5},that) < Math.pow(that.radius,2)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (_Vector__WEBPACK_IMPORTED_MODULE_0__[\"distance2\"]({x: this.x + (this.points[0].x +this.points[3].x)*0.5,y: this.y + (this.points[0].y * this.points[3].y)*0.5},that) < Math.pow(that.radius,2)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\n//# sourceURL=webpack:///./src/Ship.js?");

/***/ }),

/***/ "./src/Vector.js":
/*!***********************!*\
  !*** ./src/Vector.js ***!
  \***********************/
/*! exports provided: magnitude, normalize, scalar_mult, rotate, perpendicular, distance2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"magnitude\", function() { return magnitude; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return normalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scalar_mult\", function() { return scalar_mult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate\", function() { return rotate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"perpendicular\", function() { return perpendicular; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"distance2\", function() { return distance2; });\nfunction magnitude(a) {\n  return Math.sqrt(a.x * a.x + a.y * a.y);\n}\n\nfunction normalize(a) {\n  var mag = magnitude(a);\n  return {\n    x: a.x / mag,\n    y: a.y / mag\n  }\n}\n\nfunction scalar_mult(a, b) {\n  return {\n    x: a.x * b,\n    y: a.y * b\n  }\n}\n\n/** @method rotate\n * @param a - the vector being rotated\n * @param angle - the angle in radians.\n */\nfunction rotate(a,angle) {\n  return {\n    x: a.x * Math.cos(angle) - a.y * Math.sin(angle),\n    y: a.x * Math.sin(angle) + a.y * Math.cos(angle)\n  }\n}\n\nfunction perpendicular(a) {\n  return {\n    x: -a.y,\n    y: a.x\n  }\n}\n\nfunction distance2(a,b) {\n  return Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2); \n}\n\n//# sourceURL=webpack:///./src/Vector.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Game; });\n/* harmony import */ var _Asteroid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Asteroid */ \"./src/Asteroid.js\");\n/* harmony import */ var _Ship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ship */ \"./src/Ship.js\");\n/* harmony import */ var _Bullet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Bullet */ \"./src/Bullet.js\");\n/* harmony import */ var _Vector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Vector */ \"./src/Vector.js\");\n\n\n\n\n\n/** @class Game\n  * A class representing the high-level functionality\n  * of a game - the game loop, buffer swapping, etc.\n  */\n class Game {\n    handleKeydown(event) {\n        switch(event.key) {\n          case ' ':\n            this.currentInput.space = true;\n            break;\n          case 'ArrowLeft':\n          case 'a':\n            this.currentInput.left = true;\n            break;\n          case 'ArrowRight':\n          case 'd':\n            this.currentInput.right = true;\n            break;\n          case 'ArrowUp':\n          case 'w':\n            this.currentInput.up = true;\n            break;\n          case 'ArrowDown':\n          case 's':\n            this.currentInput.down = true;\n            break;\n        }\n      }\n      handleKeyup(event) {\n        switch(event.key) {\n          case ' ':\n            this.currentInput.space = false;\n            break;\n          case 'ArrowLeft':\n          case 'a':\n            this.currentInput.left = false;\n            break;\n          case 'ArrowRight':\n          case 'd':\n            this.currentInput.right = false;\n            break;\n          case 'ArrowUp':\n          case 'w':\n            this.currentInput.up = false;\n            break;\n          case 'ArrowDown':\n          case 's':\n            this.currentInput.down = false;\n            break;\n        }\n      }\n    /** @constructor\n      * Creates the game instance\n      * @param {integer} width - the width of the game screen in pixels\n      * @param {integer} heght - the height of the game screen in pixels\n      */\n    constructor(width, height) {\n      this._start = null;\n      this.WIDTH = width;\n      this.HEIGHT = height;\n      // Set up the back buffer\n      this.backBuffer = document.createElement('canvas');\n      this.backBuffer.width = this.WIDTH;\n      this.backBuffer.height = this.HEIGHT;\n      this.backBufferCtx = this.backBuffer.getContext('2d');\n  \n      // Set up the screen buffer\n      this.screenBuffer = document.createElement('canvas');\n      this.screenBuffer.width = this.WIDTH;\n      this.screenBuffer.height = this.HEIGHT;\n      this.screenBufferCtx = this.screenBuffer.getContext('2d');\n      document.body.append(this.screenBuffer);\n\n      //Set up the environment\n      this.player = new _Ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.WIDTH, this.HEIGHT);\n      this.playerlives = 3;\n      this.respawning = false;\n      this.respawntime = 0;\n      this.asteroids = [];\n      this.bullets = [];\n      this.difficulty = 1;\n      this.score = 0;\n      this.over = false;\n      //quick function to format the score\n      Number.prototype.pad = function(size) {\n        var s = String(this);\n        while (s.length < (size || 2)) {s = \"0\" + s;}\n        return s;\n      }\n      for (var i = 0; i < 7; i++) {\n        this.asteroids.push(this.spawnAsteroid());\n      }\n      /* for (var i = 0; i < 4; i++) {\n          // Spawn asteroids to the right of the player;\n          \n          \n      } */\n      this.currentInput = {\n        space: false,\n        left: false,\n        right: false,\n        up: false,\n        down: false,\n      }\n      window.addEventListener('keydown', evt => this.handleKeydown(evt));\n      window.addEventListener('keyup', evt => this.handleKeyup(evt));\n    }\n\n    spawnAsteroid() {\n        //start asteroids towards edge of map. if some are overlapping, they'll work themselves out.\n        var xrand = Math.random();\n        var yrand = Math.random();\n        var pos = Math.random();\n        var xnew, ynew;\n        if (pos > 0.75) {\n            xnew = xrand * this.WIDTH * 0.3;\n            ynew = yrand * this.HEIGHT;\n        }\n        else if (pos < 0.25) {\n            xnew = this.WIDTH - xrand * this.WIDTH * 0.3;\n            ynew = yrand * this.HEIGHT;\n        }\n        else if (pos < 0.5) {\n            ynew = yrand * this.HEIGHT * 0.3;\n            xnew = xrand * this.WIDTH;\n        }\n        else {\n            ynew = this.HEIGHT - yrand * this.HEIGHT * 0.3;\n            xnew = xrand * this.WIDTH;\n        }\n        var size = Math.min(Math.ceil((this.difficulty + 1) * Math.random()),6);\n        var dir = _Vector__WEBPACK_IMPORTED_MODULE_3__[\"normalize\"]({x: Math.random(), y: Math.random()});\n        var speed = this.difficulty * 0.01 + Math.random() * 0.05;\n        var ast = new _Asteroid__WEBPACK_IMPORTED_MODULE_0__[\"default\"](size,xnew,ynew,this.HEIGHT,this.WIDTH,dir,speed,10,10);\n        return ast;\n    }\n\n    tutorial(ctx) {\n        ctx.fillStyle = \"white\";\n        ctx.font = \"16px 'Courier New'\";\n        ctx.fillText(String.fromCharCode(8593) + \" to increase speed\",this.WIDTH - 200, this.HEIGHT -100);\n        ctx.fillText(String.fromCharCode(8595) + \" to decrease speed\", this.WIDTH - 200, this.HEIGHT - 80);\n        ctx.fillText(String.fromCharCode(8592) + \" to turn left\", this.WIDTH - 200,this.HEIGHT - 60);\n        ctx.fillText(String.fromCharCode(8594) + \" to turn right\", this.WIDTH - 200,this.HEIGHT - 40);\n        ctx.fillText('Space to shoot',this.WIDTH - 200,this.HEIGHT - 20);\n    }\n\n      y_dir() {\n          if (this.currentInput.up && this.currentInput.down) {\n              return 0;\n          }\n          if (this.currentInput.up) {\n              return 0.2;\n          }\n          if (this.currentInput.down) {\n              return -0.2;\n          }\n          return 0;\n      }\n\n      r_dir() {\n          if (this.currentInput.left && this.currentInput.down) {\n              return 0;\n          }\n          if (this.currentInput.left) {\n              return -1;\n          }\n          if (this.currentInput.right) {\n              return 1;\n          }\n          return 0;\n      }\n\n      gameover(ctx) {\n        ctx.font = \"40px Arial\";\n        ctx.fillStyle = \"lightcyan\";\n        ctx.fillText(\"Game Over.\",this.WIDTH/2 - 100,this.HEIGHT/2 -20);\n      }\n      playerdie() {\n        this.playerlives--;\n        if (this.playerlives < 0) {\n            this.over = true;\n        }\n        this.player = new _Ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.WIDTH, this.HEIGHT);\n        var tooclose = false;\n        for (var i = 0; i < this.asteroids.length; i++) {\n            if (_Vector__WEBPACK_IMPORTED_MODULE_3__[\"distance2\"](this.asteroids[i], this.player) < Math.pow(this.asteroids[i].radius + this.player.radius * 2,2)) {\n                //just pop the asteroid away, instead of finding a better place for the ship.\n                this.asteroids[i].x = 0;\n                this.asteroids[i].y = 0;\n            }\n        } \n        this.render();\n        this.respawning = true;\n        this.respawntime = 0;\n      }\n\n      countdown(ctx) {\n        ctx.fillStyle = \"black\";\n        ctx.strokeStyle = \"white\";\n        ctx.fillRect(this.WIDTH/2 - 30, this.HEIGHT/2 - 65,60,70);\n        ctx.strokeRect(this.WIDTH/2 - 30, this.HEIGHT/2 - 65,60,70);\n        ctx.font = \"bold 80px Arial\";\n        ctx.fillStyle = \"lightcyan\";\n        ctx.fillText((3 - Math.floor(this.respawntime/1000)).toString(),this.WIDTH/2 - 20, this.HEIGHT/2);\n      }\n\n      drawOverlay(ctx) {\n        ctx.fillStyle = \"yellow\";\n        ctx.font = \"20px 'Courier New'\";\n        ctx.fillText(this.score.pad(3),4,20);\n        for (var i = 0; i < this.playerlives; i++) {\n            var offset = 10 + 12*i;\n            ctx.beginPath();\n            ctx.moveTo(offset, 25);\n            ctx.lineTo(offset + 5,37);\n            ctx.lineTo(offset, 34);\n            ctx.lineTo(offset - 5,37);\n            ctx.closePath();\n            ctx.fill();\n    \n        }\n        ctx.font = \"30px 'Courier New'\";\n        ctx.fillText(this.difficulty.pad(2),4,60);\n        //ctx.fillText(\"LIVES: \",5,20);\n        //ctx.fillText(\"SCORE: \",this.WIDTH/2 - 80, 20);\n        //ctx.fillText(\"LEVEL: \",this.WIDTH - 120,20);\n      }\n\n      checkcollisions() {\n          for (var i = 0; i < this.asteroids.length; i++) {\n              var j;\n              for (j = i+1; j < this.asteroids.length; j++) {\n                  if (_Vector__WEBPACK_IMPORTED_MODULE_3__[\"distance2\"](this.asteroids[i],this.asteroids[j]) < Math.pow(this.asteroids[i].radius + this.asteroids[j].radius,2)) {\n                      this.asteroids[i].collide(this.asteroids[j]);\n                  }\n\n                  //Check collisions across boundaries by transposing the asteroid then bringing it back.\n                  if (this.asteroids[i].x < 0) {\n                    this.asteroids[i].x += this.WIDTH + 2* this.asteroids[i].radius;\n                    if (_Vector__WEBPACK_IMPORTED_MODULE_3__[\"distance2\"](this.asteroids[i],this.asteroids[j]) < Math.pow(this.asteroids[i].radius + this.asteroids[j].radius,2)) {\n                      this.asteroids[i].collide(this.asteroids[j]);\n                    }\n                    this.asteroids[i].x -= this.WIDTH + 2* this.asteroids[i].radius;\n                  }\n                  if (this.asteroids[i].x > this.WIDTH) {\n                    this.asteroids[i].x += this.WIDTH + 2* this.asteroids[i].radius;\n                    if (_Vector__WEBPACK_IMPORTED_MODULE_3__[\"distance2\"](this.asteroids[i],this.asteroids[j]) < Math.pow(this.asteroids[i].radius + this.asteroids[j].radius,2)) {\n                        this.asteroids[i].collide(this.asteroids[j]);\n                    }\n                    this.asteroids[i].x -= this.WIDTH + 2* this.asteroids[i].radius;\n                  }\n                  if (this.asteroids[i].y < 0) {\n                    this.asteroids[i].y += this.HEIGHT + 2* this.asteroids[i].radius;\n                    if (_Vector__WEBPACK_IMPORTED_MODULE_3__[\"distance2\"](this.asteroids[i],this.asteroids[j]) < Math.pow(this.asteroids[i].radius + this.asteroids[j].radius,2)) {\n                        this.asteroids[i].collide(this.asteroids[j]);\n                    }\n                    this.asteroids[i].y -= this.HEIGHT + 2* this.asteroids[i].radius;\n                  }\n                  if (this.asteroids[i].y > this.HEIGHT) {\n                    this.asteroids[i].y -= this.HEIGHT + 2* this.asteroids[i].radius;\n                    if (_Vector__WEBPACK_IMPORTED_MODULE_3__[\"distance2\"](this.asteroids[i],this.asteroids[j]) < Math.pow(this.asteroids[i].radius + this.asteroids[j].radius,2)) {\n                        this.asteroids[i].collide(this.asteroids[j]);\n                    }\n                    this.asteroids[i].y += this.HEIGHT + 2* this.asteroids[i].radius;\n                  }\n              }\n              if (_Vector__WEBPACK_IMPORTED_MODULE_3__[\"distance2\"](this.asteroids[i], this.player) < Math.pow(this.asteroids[i].radius + this.player.radius,2)) {\n                if(this.player.collidecheck(this.asteroids[i])) {\n                    this.playerdie();\n                }\n              }\n              for (j = 0; j < this.bullets.length; j++) {\n                if (_Vector__WEBPACK_IMPORTED_MODULE_3__[\"distance2\"](this.asteroids[i],this.bullets[j]) < Math.pow(this.asteroids[i].radius + this.bullets[j].radius,2)) {\n                    this.score += Math.floor(this.asteroids[i].size * 10);\n                    var x = this.asteroids[i].destroy();\n                    if (x) {\n                        this.asteroids.push(x.aster1);\n                        this.asteroids.push(x.aster2);\n                    }\n                    this.asteroids.splice(i,1);\n                    this.bullets.splice(j,1);\n                    \n                    i--;\n                    j--;\n                    break;\n                }\n              }\n            \n          }\n      }\n\n    /** @method update\n      * Updates the game state\n      * @param {integer} elapsedTime - the number of milliseconds per frame\n      */\n    update(elapsedTime) {\n      if (this.respawning) {\n          this.respawntime += elapsedTime;\n          if (this.respawntime > 3000) {\n            this.respawning = false;\n          }\n          return;\n      }\n      this.player.update(this.y_dir(),this.r_dir(),elapsedTime);\n      this.asteroids.forEach(function(a) {\n          a.update(elapsedTime);\n      });\n      if (this.currentInput.space) {\n          var res = this.player.fire();\n          if (res) {\n              this.bullets.push(res);\n          }\n      };\n      for (var i = 0; i < this.bullets.length; i++) {\n          if (this.bullets[i].update(elapsedTime)) {\n              this.bullets.splice(i,1);\n          }\n      }\n      this.checkcollisions();\n      if(this.asteroids.length == 0) {\n          this.difficulty++;\n          // give a player an extra life once they complete the level.\n          this.playerlives = Math.min(this.playerlives + 1, 3);\n          for (var i = 0; i < this.difficulty + 6; i++) {\n              this.asteroids.push(this.spawnAsteroid());\n          }\n          this.player = new _Ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.WIDTH, this.HEIGHT);\n      }\n    }\n    /** @method render\n      * Renders the game state\n      * @param {integer} elapsedTime - the number of milliseconds per frame\n      */\n    render(elapsedTime) {\n      if (this.over) {\n        this.gameover(this.backBufferCtx);\n      }\n      else if (this.respawning) {\n          this.countdown(this.backBufferCtx);\n      }\n      else {\n        var bbctx = this.backBufferCtx;\n        // Clear the back buffer\n        bbctx.clearRect(0,0,this.WIDTH, this.HEIGHT);\n  \n        this.player.render(this.backBufferCtx);\n        this.asteroids.forEach(function (a) {\n            a.render(bbctx);\n        })\n        this.bullets.forEach(function (b) {\n            b.render(bbctx);\n        })\n        this.drawOverlay(this.backBufferCtx);\n        if (this.difficulty == 1) {\n            this.tutorial(this.backBufferCtx);\n        }\n      }\n      \n      // Flip the back buffer\n      this.screenBufferCtx.clearRect(0,0,this.width,this.heght);\n      this.screenBufferCtx.fillStyle = 'black';\n      this.screenBufferCtx.fillRect(0,0,this.WIDTH,this.HEIGHT)\n      this.screenBufferCtx.drawImage(this.backBuffer, 0, 0);\n    }\n    /** @method loop\n      * Updates and renders the game,\n      * and calls itself on the next draw cycle.\n      * @param {DOMHighResTimestamp} timestamp - the current system time\n      */\n    loop(timestamp) {\n      var elapsedTime = this._frame_start ? timestamp - this._frame_start : 0;\n      this.update(elapsedTime);\n      this.render(elapsedTime);\n      this._frame_start = timestamp;\n      if (this.over) {\n          return;\n      }\n      window.requestAnimationFrame((timestamp) => {this.loop(timestamp)});\n    }\n  }\n\n//# sourceURL=webpack:///./src/game.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n\n\n\nvar game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1200, 650);\ngame.loop();\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });